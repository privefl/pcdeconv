% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deconv.R
\name{pc_deconv}
\alias{pc_deconv}
\title{Alternating deconvolution with incremental building.}
\usage{
pc_deconv(
  PC,
  m_exponent,
  use_varimax = TRUE,
  ind_plot = integer(0L),
  ncores = NULL,
  ...
)
}
\arguments{
\item{m_exponent}{Exponent to be applied to the coefficients of \code{Q}.
A value between 3 and 30 is usually appropriate to priotize larger Q values.}

\item{use_varimax}{Whether to transform PCs using a varimax rotation?
Default is \code{TRUE}. It generally helps with the warm starts (initializations).}

\item{ncores}{Number of cores to use. Default is \code{1}. You can use e.g.
\code{bigparallelr::nb_cores()}.}

\item{...}{
  Arguments passed on to \code{\link[=pc_deconv_withstart]{pc_deconv_withstart}}
  \describe{
    \item{\code{thr_coef}}{Threshold under which coefficients of \code{Q} are not used.
Default is \code{0.6}.}
  }}

\item{conv_diff}{Maximum difference between consecutive values of mixture
coefficients to stop updating these weights. Default is \code{1e-4}.}

\item{max_iter}{Maximum number of iterations. Default is \code{100}.}
}
\value{
A list of several \code{PC_ref}, after convergence of the deconvolution
\eqn{PC \approx Q \cdot PC_\text{ref}}, for all subsets of \code{PC} using from
\code{2} to \code{ncol(PC)} columns.
}
\description{
Alternating deconvolution with incremental building.
}
\examples{
PC <- prcomp(iris[1:4])$x
PC_ref_cheat <- do.call("rbind", by(PC, iris$Species, colMeans))  # cheating
all_PC_ref_conv <- pc_deconv(PC, m_exponent = 10)
plot(PC, pch = 20, col = "green")
points(PC_ref_cheat, col = "orange", pch = 3, lwd = 2)
points(all_PC_ref_conv[[3]], col = "purple", pch = 4, lwd = 2)
points(all_PC_ref_conv[[4]], col = "red",    pch = 5, lwd = 2)
points(all_PC_ref_conv[[5]], col = "blue",   pch = 6, lwd = 2)
}
\seealso{
\link{pc_deconv_withstart}
}
